apiVersion: tekton.dev/v1alpha1
kind: ClusterTask
metadata:
  annotations:
    manifestival: new
  creationTimestamp: "2020-04-01T13:25:07Z"
  generation: 1
  name: s2i
  ownerReferences:
  - apiVersion: operator.tekton.dev/v1alpha1
    blockOwnerDeletion: true
    controller: true
    kind: Config
    name: cluster
    uid: 29a425db-2f4b-44e3-827a-c4bcff69dca4
  resourceVersion: "85849"
  selfLink: /apis/tekton.dev/v1alpha1/clustertasks/s2i
  uid: 21711d8b-5a9a-4cee-813a-67a5016fdbb5
spec:
  inputs:
    params:
    - description: The location of the s2i builder image.
      name: BUILDER_IMAGE
      type: string
    - default: .
      description: The location of the path to run s2i from.
      name: PATH_CONTEXT
      type: string
    - default: "true"
      description: Verify the TLS on the registry endpoint (for push/pull to a non-TLS
        registry)
      name: TLSVERIFY
      type: string
    - default: "0"
      description: Log level when running the S2I binary
      name: LOGLEVEL
      type: string
    resources:
    - name: source
      type: git
  outputs:
    resources:
    - name: image
      type: image
  steps:
  - command:
    - /usr/local/bin/s2i
    - --loglevel=$(inputs.params.LOGLEVEL)
    - build
    - $(inputs.params.PATH_CONTEXT)
    - $(inputs.params.BUILDER_IMAGE)
    - --as-dockerfile
    - /gen-source/Dockerfile.gen
    image: quay.io/openshift-pipeline/s2i:nightly
    name: generate
    resources: {}
    volumeMounts:
    - mountPath: /gen-source
      name: gen-source
    workingDir: /workspace/source
  - command:
    - buildah
    - bud
    - --tls-verify=$(inputs.params.TLSVERIFY)
    - --layers
    - -f
    - /gen-source/Dockerfile.gen
    - -t
    - $(outputs.resources.image.url)
    - .
    image: quay.io/buildah/stable
    name: build
    resources: {}
    securityContext:
      privileged: true
    volumeMounts:
    - mountPath: /var/lib/containers
      name: varlibcontainers
    - mountPath: /gen-source
      name: gen-source
    workingDir: /gen-source
  - command:
    - buildah
    - push
    - --tls-verify=$(inputs.params.TLSVERIFY)
    - $(outputs.resources.image.url)
    - docker://$(outputs.resources.image.url)
    image: quay.io/buildah/stable
    name: push
    resources: {}
    securityContext:
      privileged: true
    volumeMounts:
    - mountPath: /var/lib/containers
      name: varlibcontainers
  volumes:
  - emptyDir: {}
    name: varlibcontainers
  - emptyDir: {}
    name: gen-source
